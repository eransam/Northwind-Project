{"ast":null,"code":"import _classCallCheck from\"C:/Users/erans/OneDrive/\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4/\\u200F\\u200F\\u05EA\\u05D9\\u05E7\\u05D9\\u05D4 \\u05D7\\u05D3\\u05E9\\u05D4/02 - Northwind/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/erans/OneDrive/\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4/\\u200F\\u200F\\u05EA\\u05D9\\u05E7\\u05D9\\u05D4 \\u05D7\\u05D3\\u05E9\\u05D4/02 - Northwind/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"C:/Users/erans/OneDrive/\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4/\\u200F\\u200F\\u05EA\\u05D9\\u05E7\\u05D9\\u05D4 \\u05D7\\u05D3\\u05E9\\u05D4/02 - Northwind/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"C:/Users/erans/OneDrive/\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4/\\u200F\\u200F\\u05EA\\u05D9\\u05E7\\u05D9\\u05D4 \\u05D7\\u05D3\\u05E9\\u05D4/02 - Northwind/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import{Component}from\"react\";import\"./Suggestions.css\";// Props interface: \nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Suggestions=/*#__PURE__*/function(_Component){_inherits(Suggestions,_Component);var _super=_createSuper(Suggestions);// constructor - initializing the state (must not perform side-effects): \nfunction Suggestions(props){var _this;_classCallCheck(this,Suggestions);_this=_super.call(this,props);// Init the state: \n_this.makeSuggestion=function(){// Change state: \n_this.setState({suggestion:\"Cranberries\"});};_this.state={suggestion:\"---\"};return _this;}// Lifecycle Hooks - can perform side-effects: \n// useEffect which runs only once: \n_createClass(Suggestions,[{key:\"componentDidMount\",value:function componentDidMount(){// ...\n}// useEffect which runs on any update: \n},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState,snapshot){// ...\n}// useEffect which runs when component destroyed: \n},{key:\"componentWillUnmount\",value:function componentWillUnmount(){// ...\n}// Event callback: \n},{key:\"render\",value:// render - returns the HTML of the component (must not perform side-effects):\nfunction render(){return/*#__PURE__*/_jsx(\"div\",{className:\"Suggestions Box\",children:/*#__PURE__*/_jsxs(\"p\",{children:[this.props.header,/*#__PURE__*/_jsx(\"button\",{onClick:this.makeSuggestion,children:\"Suggest Product\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Suggestion: \",this.state.suggestion]})]})});}}]);return Suggestions;}(Component);export default Suggestions;","map":{"version":3,"sources":["C:/Users/erans/OneDrive/שולחן העבודה/‏‏תיקיה חדשה/02 - Northwind/src/Components/HomeArea/Suggestions/Suggestions.tsx"],"names":["Component","Suggestions","props","makeSuggestion","setState","suggestion","state","prevProps","prevState","snapshot","header"],"mappings":"ggCAAA,OAASA,SAAT,KAA0B,OAA1B,CACA,MAAO,mBAAP,CAEA;2FAUMC,CAAAA,W,0GAEF;AACA,qBAAmBC,KAAnB,CAA4C,6CACxC,uBAAMA,KAAN,EAEA;AAHwC,MA2BpCC,cA3BoC,CA2BnB,UAAM,CAE3B;AACA,MAAKC,QAAL,CAAc,CAAEC,UAAU,CAAE,aAAd,CAAd,EACH,CA/B2C,CAIxC,MAAKC,KAAL,CAAa,CAClBD,UAAU,CAAE,KADM,CAAb,CAJwC,aAO3C,CAED;AAEA;yDACA,4BAAiC,CAC7B;AACH,CAED;kCACA,4BAA0BE,SAA1B,CAAiEC,SAAjE,CAAwGC,QAAxG,CAA8H,CAC1H;AACH,CAED;oCACA,+BAAoC,CAChC;AACH,CAED;sBAOA;AACA,iBAA6B,CAEzB,mBACI,YAAK,SAAS,CAAC,iBAAf,uBACR,qBAEkB,KAAKP,KAAL,CAAWQ,MAF7B,cAMgB,eAAQ,OAAO,CAAE,KAAKP,cAAtB,6BANhB,cASgB,uCAAoB,KAAKG,KAAL,CAAWD,UAA/B,GAThB,GADQ,EADJ,CAeH,C,yBAtDqBL,S,EAyD1B,cAAeC,CAAAA,WAAf","sourcesContent":["import { Component } from \"react\";\nimport \"./Suggestions.css\";\n\n// Props interface: \ninterface SuggestionsProps {\n\theader: string;\n}\n\n// State interface: \ninterface SuggestionsState {\n\tsuggestion: string;\n}\n\nclass Suggestions extends Component<SuggestionsProps, SuggestionsState> {\n\n    // constructor - initializing the state (must not perform side-effects): \n    public constructor(props: SuggestionsProps) {\n        super(props);\n\n        // Init the state: \n        this.state = {\n\t\t\tsuggestion: \"---\"\n        };\n    }\n\n    // Lifecycle Hooks - can perform side-effects: \n\n    // useEffect which runs only once: \n    public componentDidMount(): void {\n        // ...\n    }\n\n    // useEffect which runs on any update: \n    public componentDidUpdate(prevProps: Readonly<SuggestionsProps>, prevState: Readonly<SuggestionsState>, snapshot?: any): void {\n        // ...\n    }\n\n    // useEffect which runs when component destroyed: \n    public componentWillUnmount(): void {\n        // ...\n    }\n\n    // Event callback: \n    private makeSuggestion = () => {\n\n        // Change state: \n        this.setState({ suggestion: \"Cranberries\" });\n    }\n\n    // render - returns the HTML of the component (must not perform side-effects):\n    public render(): JSX.Element {\n\n        return (\n            <div className=\"Suggestions Box\">\n\t\t\t\t<p>\n                    {/* Display props:  */}\n                    { this.props.header }\n\n                    {/* Call event:  */}\n                    {/* <button onClick={this.makeSuggestion.bind(this)}>Suggest Product</button> */}\n                    <button onClick={this.makeSuggestion}>Suggest Product</button>\n\n                    {/* Display state:  */}\n                    <span>Suggestion: { this.state.suggestion }</span>\n                </p>\n            </div>\n        );\n    }\n}\n\nexport default Suggestions;\n"]},"metadata":{},"sourceType":"module"}