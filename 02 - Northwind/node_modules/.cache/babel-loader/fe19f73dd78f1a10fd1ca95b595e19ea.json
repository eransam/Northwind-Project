{"ast":null,"code":"import _classCallCheck from\"C:/Users/erans/OneDrive/\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4/\\u200F\\u200F\\u05EA\\u05D9\\u05E7\\u05D9\\u05D4 \\u05D7\\u05D3\\u05E9\\u05D4/02 - Northwind/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/erans/OneDrive/\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4/\\u200F\\u200F\\u05EA\\u05D9\\u05E7\\u05D9\\u05D4 \\u05D7\\u05D3\\u05E9\\u05D4/02 - Northwind/node_modules/@babel/runtime/helpers/esm/createClass.js\";import axios from\"axios\";import store from\"../Redux/Store\";var InterceptorsService=/*#__PURE__*/function(){function InterceptorsService(){_classCallCheck(this,InterceptorsService);}_createClass(InterceptorsService,[{key:\"createInterceptors\",value:function createInterceptors(){axios.interceptors.request.use(function(request){if(store.getState().authState.token){request.headers={authorization:\"Bearer \"+store.getState().authState.token};}return request;});}}]);return InterceptorsService;}();var interceptorsService=new InterceptorsService();export default interceptorsService;","map":{"version":3,"sources":["C:/Users/erans/OneDrive/שולחן העבודה/‏‏תיקיה חדשה/02 - Northwind/src/Services/InterceptorsService.ts"],"names":["axios","store","InterceptorsService","interceptors","request","use","getState","authState","token","headers","authorization","interceptorsService"],"mappings":"sgBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,gBAAlB,C,GAEMC,CAAAA,mB,qKAEF,6BAAkC,CAE9BF,KAAK,CAACG,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+B,SAAAD,OAAO,CAAI,CAEtC,GAAGH,KAAK,CAACK,QAAN,GAAiBC,SAAjB,CAA2BC,KAA9B,CAAqC,CACjCJ,OAAO,CAACK,OAAR,CAAkB,CACdC,aAAa,CAAE,UAAYT,KAAK,CAACK,QAAN,GAAiBC,SAAjB,CAA2BC,KADxC,CAAlB,CAGH,CAED,MAAOJ,CAAAA,OAAP,CACH,CATD,EAWH,C,mCAIL,GAAMO,CAAAA,mBAAmB,CAAG,GAAIT,CAAAA,mBAAJ,EAA5B,CAEA,cAAeS,CAAAA,mBAAf","sourcesContent":["import axios from \"axios\";\r\nimport store from \"../Redux/Store\";\r\n\r\nclass InterceptorsService {\r\n\r\n    public createInterceptors(): void {\r\n\r\n        axios.interceptors.request.use(request => {\r\n            \r\n            if(store.getState().authState.token) {\r\n                request.headers = {\r\n                    authorization: \"Bearer \" + store.getState().authState.token\r\n                };\r\n            }\r\n\r\n            return request;\r\n        });\r\n\r\n    }\r\n\r\n}\r\n\r\nconst interceptorsService = new InterceptorsService();\r\n\r\nexport default interceptorsService;"]},"metadata":{},"sourceType":"module"}